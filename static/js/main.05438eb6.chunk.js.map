{"version":3,"sources":["component/ForecastCard.js","component/Forecast.js","component/weather.jsx","App.js","index.js"],"names":["ForecastCard","props","days","day","Container","fluid","Row","className","Col","Card","Content","Header","icon1","description","Meta","tempMin","tempMax","Description","extra","Forecast","tempMins","tempMaxes","descriptions","useEffect","console","log","tempCity","class","Weather","currentTemp","city","icon","API_Key","location","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Scales","calCelsius","newTemp","Math","floor","daysString","0","1","2","3","4","5","6","App","useState","setCurrentTemp","setCity","setTempCity","setTempMin","setTempMax","setDescription","setDescriptions","input","setInput","setIcon","tempScale","setTempScale","setDay","setTempMins","setTempMaxes","toggleActive","setToggleActive","convertTemp","temp","dec","cell","getFahrenheit","getCurrentWeather","e","a","fetch","api_call","json","response","cod","main","temp_min","temp_max","weather","getdate","splitDays","findMin","findMax","day_max","i","length","hours","map","hour","max","push","day_min","min","array","size","index","slice","fiveDay","day1","Date","getDay","k","forecast","list","desList","item","getforecast","min_divs","max_divs","onClick","newState","newTempScale","on","off","offstyle","onstyle","active","role","style","background","process","Form","onSubmit","name","preventDefault","Control","onChange","target","value","type","placeholder","Button","variant","ReactDOM","render","basename","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.05438eb6.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { Card, Icon, Image } from 'semantic-ui-react'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { icon1 } from '../App'\n\nconst ForecastCard = (props) => {\n    let days = props.day || []\n    return (\n        < Container fluid={true} >\n            <Row className='projectsBox'>\n                <Col className=\"forecastcards\">\n                    <Card >\n                        <Card.Content>\n                            <Card.Header> {days[0]} <i className={`wi ${icon1[props.description[0]]}`} />   </Card.Header>\n                            <Card.Meta>\n                                <div className='min' > {props.tempMin[0]} </div>\n                                <div className='max'> {props.tempMax[0]} </div>\n                            </Card.Meta>\n                            <Card.Description>\n                                {props.description[0]}\n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                        </Card.Content>\n                    </Card>\n                </Col>\n                <Col className=\"forecastcards\">\n                    <Card >\n                        <Card.Content>\n                            <Card.Header> {days[1]}<i className={`wi ${icon1[props.description[1]]}`} />  </Card.Header>\n                            <Card.Meta>\n                                <div className='min' > {props.tempMin[1]} </div>\n                                <div className='max'> {props.tempMax[1]} </div>\n                            </Card.Meta>\n                            <Card.Description>\n                                {props.description[1]}\n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                        </Card.Content>\n                    </Card>\n                </Col>\n                <Col className=\"forecastcards\">\n                    <Card >\n                        <Card.Content>\n                            <Card.Header>{days[2]} <i className={`wi ${icon1[props.description[2]]}`} /> </Card.Header>\n                            <Card.Meta>\n                                <div className='min' > {props.tempMin[2]} </div>\n                                <div className='max'> {props.tempMax[2]} </div>\n                            </Card.Meta>\n                            <Card.Description>\n                                {props.description[2]}\n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                        </Card.Content>\n                    </Card>\n                </Col>\n                <Col className=\"forecastcards\">\n                    <Card >\n                        <Card.Content>\n                            <Card.Header> {days[3]}  <i className={`wi ${icon1[props.description[3]]}`} /></Card.Header>\n                            <Card.Meta>\n                                <div className='min' > {props.tempMin[3]} </div>\n                                <div className='max'> {props.tempMax[3]} </div>\n                            </Card.Meta>\n                            <Card.Description>\n                                {props.description[3]}\n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                        </Card.Content>\n                    </Card>\n                </Col>\n\n                <Col className=\"forecastcards\">\n                    <Card >\n                        <Card.Content>\n                            <Card.Header>{days[4]} <i className={`wi ${icon1[props.description[4]]}`} /> </Card.Header>\n                            <Card.Meta>\n                                <div className='min' > {props.tempMin[4]} </div>\n                                <div className='max'> {props.tempMax[4]} </div>\n                            </Card.Meta>\n                            <Card.Description>\n                                {props.description[4]}\n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n\n                        </Card.Content>\n                    </Card>\n                </Col>\n            </Row >\n        </Container >\n    );\n}\n\nexport default ForecastCard","import React from 'react'\nimport { useState, useEffect, useRef } from 'react';\n// import { calCelsius, getFahrenheit } from \"./weather\";\nimport { Container } from 'react-bootstrap';\nimport ForecastCard from './ForecastCard';\n\nexport default function Forecast(props) {\n    const { tempMins, tempMaxes, day, descriptions } = props\n\n    useEffect(() => {\n        console.log('useEffect Forecast called')\n        console.log('props', props)\n\n    }, [props.tempCity]);\n\n    return (\n        <body className=\"forecast\">\n            <Container className=\"forecast\">\n                <div class=\"d-flex flex-row d-flex justify-content-around\">\n                    {/* {[day, descriptions]} */}\n                    <ForecastCard tempMin={tempMins} tempMax={tempMaxes} day={day ? day : []} description={descriptions} />\n                </div>\n            </Container >\n        </body>\n    )\n}\n\n\n","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Forecast from \"./Forecast\";\n\nconst scales = {\n    KELVIN: 'kelvin',\n    CELSIUS: 'celsius',\n    FAHRENHEIT: 'fahrenheit'\n}\n\nconst location = {\n    city: undefined\n}\n\nconst Weather = props => {\n    const { currentTemp, tempMin, tempMax, description } = props\n\n    // function onClickConvertScale() {\n\n    //     if (tempScale === scales.FAHRENHEIT) {\n    //         setTempScale(scales.CELSIUS)\n    //     }\n    //     if (tempScale === scales.CELSIUS) {\n    //         setTempScale(scales.FAHRENHEIT)\n    //     }\n\n    // }\n\n    return (\n        < div className=\"container body\">\n            <div className=\"cards\"></div>\n            <div className=\"cityHeader\"> {props.city} </div>\n            <h2 className=\"py-4\">\n                <div className=\"icons\"><i className={`wi ${props.icon}`} /></div>\n            </h2>\n            <h2 className=\"py-2\"> Current {currentTemp} </h2>\n\n            {/** show max n min temp*/}\n            <div>\n                <h2 className=\" d-flex justify-content-around\">\n                    <div> min{tempMin}</div>\n                    <div>max{tempMax}</div>\n                </h2>\n            </div>\n\n            {/* Weather description */}\n            <h3 className=\"py-3 \">\n                {description}\n            </h3>\n            <div className=\"d-flex justify-content-end\">\n                {/* <Button className=\"clear\" variant=\"light\" onClick={onClickConvertScale} > C / F </Button> */}\n\n            </div>\n        </div >\n\n    );\n\n}\nexport default Weather;\n\n","import Weather from './component/weather'\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nimport { Container, Button, InputGroup, Form, Col, FormControl, Row } from 'react-bootstrap';\nimport Forecast from './component/Forecast';\nimport Toggle from 'react-bootstrap-toggle';\nimport NavBar from './component/NavBar';\n\n\n//api.openweathermap.org/data/2.5/weather?q=London,uk\nconst API_Key = \"d06db66101a950f6afc113f4474df923\";\n\nlet location = {\n  city: 'San Francisco',\n}\n\nexport const icon1 = {\n  Thunderstorm: \"wi-thunderstorm\",\n  Drizzle: \"wi-sleet\",\n  Rain: \"wi-storm-showers\",\n  Snow: \"wi-snow\",\n  Atmosphere: \"wi-fog\",\n  Clear: \"wi-day-sunny\",\n  Clouds: \"wi-day-fog\"\n};\nconst Scales = {\n  KELVIN: 'kelvin',\n  CELSIUS: 'celsius',\n  FAHRENHEIT: 'fahrenheit'\n}\n\nexport function getFahrenheit(newTemp) {\n  const cell = calCelsius(newTemp)\n  return Math.floor(cell * (9 / 5) + 32);\n}\n\nexport function calCelsius(newTemp) {\n  let cell = Math.floor(newTemp - 273.15);\n  return cell;\n}\n\nconst daysString = {\n  0: 'Sun',\n  1: 'Mon',\n  2: 'Tues',\n  3: 'Wed',\n  4: 'Thurs',\n  5: 'Fri',\n  6: 'Sat',\n}\n\nfunction App() {\n\n  const [currentTemp, setCurrentTemp] = useState()\n  const [city, setCity] = useState(location.city);\n  const [tempCity, setTempCity] = useState(location.city);\n  const [tempMin, setTempMin] = useState(0);\n  const [tempMax, setTempMax] = useState(0);\n  const [description, setDescription] = useState()\n  const [descriptions, setDescriptions] = useState([])\n  const [input, setInput] = useState('')\n  const [icon, setIcon] = useState('')\n  const [tempScale, setTempScale] = useState(Scales.FAHRENHEIT)\n\n  // const [tempMin, setTempMin] = useState([]);\n  // const [tempMax, setTempMax] = useState([]);\n  // const [description, setDescription] = useState([])\n  // const [input, setInput] = useState(0)\n  const [time, getTime] = useState()\n  const [day, setDay] = useState([])\n  const [tempMins, setTempMins] = useState([]);\n  const [tempMaxes, setTempMaxes] = useState([]);\n\n  const [toggleActive, setToggleActive] = useState(true)\n\n\n  function convertTemp(temp) {\n    let dec = ''\n    let newTemp\n\n    console.log('temp is', tempScale)\n\n    if (tempScale === Scales.CELSIUS) {\n      newTemp = calCelsius(temp)\n      dec = 'C'\n    }\n    if (tempScale === Scales.FAHRENHEIT) {\n      newTemp = getFahrenheit(temp)\n      dec = 'F'\n    }\n    if (tempScale === Scales.KELVIN) {\n      newTemp = temp\n    }\n    return (\n      <div>\n        {newTemp} {dec} &deg;\n            </div>\n    );\n  }\n\n  function onToggle(e) {\n\n    let newState = !toggleActive\n    console.log(toggleActive, newState)\n\n    let newTempScale = newState ? Scales.FAHRENHEIT : Scales.CELSIUS;\n    setTempScale(newTempScale)\n    setToggleActive(!toggleActive)\n    console.log(newTempScale)\n  }\n\n  function onChangeSearchCity(e) {\n    console.log(e.target.value)\n    setInput(e.target.value)\n  }\n  function onSubmitSearchCity(e, name) {\n    console.log('onSubmitSearchCity called')\n    setTempCity(input)\n    e.preventDefault()\n    return false\n  }\n  // function onToggle() {\n  //   setToggleActive(!toggleActive)\n  // }\n  useEffect(() => {\n    console.log('useEffect called')\n    const getCurrentWeather = async (e) => {\n\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${tempCity}&appid=${API_Key}`);\n      //5 day forecast is available at any location or city. It includes weather data every 3 hours.\n\n      const response = await api_call.json();\n      // console.log(response)\n\n      if (response.cod !== 200) {\n        return\n      }\n      console.log(response)\n      setCity(tempCity)\n      setTempMin(response.main.temp_min)\n      setTempMax(response.main.temp_max)\n      setDescription(response.weather[0].description)\n      setCurrentTemp(response.main.temp)\n      setIcon(response.weather[0].main)\n    }\n\n    const getforecast = async (e) => {\n      //5 day forecast is available at any location or city. It includes weather data every 3 hours.\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${tempCity}&appid=${API_Key}`);\n      //\n      const response = await api_call.json();\n      console.log(response)\n\n      if (response.cod !== \"200\") {\n        return\n      }\n\n      function getdate() {\n        let fiveDay = []\n        let getToday = new Date()\n        let day1 = getToday.getDay()\n        for (let i = day1; i < day1 + 5; i++) {\n          let k = i\n          if (k >= 7) {\n            k = k - 7\n          }\n          fiveDay.push(daysString[i, k])\n        }\n        return fiveDay\n      }\n\n      const forecast = getdate()\n\n      setDay([...forecast])\n\n      function splitDays(array, size) {\n        let days = []\n        let index = 0;\n        while (index < array.length) {\n          days.push(array.slice(index, size + index));\n          index += size;\n        }\n        return days;\n      }\n\n      let days = splitDays(response.list, 8)\n\n      //location of the temp_min \n      // console.log(day1[0].main.temp_min)\n      // let max = Math.max(...hours)\n      // max: max\n\n      function findMin(days) {\n        let day_min = []\n        for (let i = 0; i < days.length; i++) {\n          let day = days[i]\n          let hours = day.map(hour => hour.main.temp_min)\n\n          let min = Math.min(...hours)\n          day_min.push({ min: min });\n        }\n        return day_min;\n      }\n\n      function findMax(days) {\n        let day_max = [];\n        for (let i = 0; i < days.length; i++) {\n          let day = days[i]\n          let hours = day.map(hour => hour.main.temp_max)\n\n          let max = Math.max(...hours)\n          day_max.push({ max: max });\n        }\n        return day_max;\n      }\n\n      const desList = [days[0][0].weather[0].main, days[1][0].weather[0].main, days[2][0].weather[0].main, days[3][0].weather[0].main, days[4][0].weather[0].main]\n\n      const min = findMin(days).map(item => item.min\n        // <div>{convertTemp(item.min)}</div>\n      )\n\n      const max = findMax(days).map(item => item.max\n        // <div> {convertTemp(item.max)} </div>)\n      )\n\n      console.log('min,max', min, max)\n\n      setTempMins([...min])\n      setTempMaxes([...max])\n      setDescriptions([...desList])\n      // tempMin = [...result]\n    }\n    getforecast();\n    getCurrentWeather();\n  }, [tempCity]);\n  // const data={\n  //   description={description} \n  // }\n  // console.log(setCity)\n\n  const min_divs = tempMins.map(item =>\n    <div>{convertTemp(item)}</div>\n  )\n\n  const max_divs = tempMaxes.map(item =>\n    <div> {convertTemp(item)} </div>)\n\n  return (\n    <div className=\"App \" >\n\n\n      {/* <Navbar.Brand className=\"navHeader float-left\">Weather Forecast</Navbar.Brand> */}\n      <div className=\"d-flex justify-content-end \">\n        <Toggle className=\"d-flex justify-content-end\"\n          onClick={onToggle}\n          on={<div className=\"buttonTextF\"> F ° </div>}\n          off={<div className=\"buttonTextC\">C °  </div>}\n          size=\"lg\"\n          offstyle=\"default\"\n          onstyle=\"default\"\n          active={toggleActive}\n        />\n      </div>\n      <header className=\"App-header background\" role=\"main\" style={{\n        background: `url(\"${process.env.PUBLIC_URL + '/img/rain_background.jpg'}\") no-repeat center / cover `\n      }}  >\n\n        <Container>\n\n          <Form onSubmit={onSubmitSearchCity}  >\n            <Form.Row className=\"px-4 d-flexcenter\">\n              <Col className=\"pd-25\">\n                <Form.Control onChange={onChangeSearchCity} name=\"city\" type=\"text\" placeholder=\"City\">\n                </Form.Control >\n              </Col>\n              <Button variant=\"light\" size=\"md\" type=\"submit\">\n                Search\n            </Button>\n            </Form.Row>\n          </Form>\n\n          <Weather icon={icon1[icon]} tempMin={convertTemp(tempMin)} tempMax={convertTemp(tempMax)} city={city}\n            description={description} currentTemp={convertTemp(currentTemp)}\n          />\n\n        </Container>\n      </header>\n      <Forecast tempCity={tempCity} tempMins={min_divs} tempMaxes={max_divs} day={day} descriptions={descriptions} />\n\n    </div >\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter basename=\"/WeatherForecast\">\n        <Switch>\n            <Route exact path=\"/\" component={App} />\n        </Switch>\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}