{"version":3,"sources":["component/weather.jsx","component/ForecastCard.js","component/Forecast.js","component/Footer.js","App.js","index.js"],"names":["Weather","props","currentTemp","tempMin","tempMax","description","city","className","style","textShadow","icon","ForecastCard","Container","fluid","Row","Col","Card","Content","Header","day","icon1","Meta","textAlign","Description","extra","Forecast","tempMins","tempMaxes","descriptions","behavior","direction","Footer","id","target","rel","href","API_Key","location","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Scales","calCelsius","newTemp","Math","floor","daysString","0","1","2","3","4","5","6","App","useState","setCurrentTemp","setCity","tempCity","setTempCity","setTempMin","setTempMax","setDescription","setDescriptions","weatherMain","setWeatherMain","input","setInput","setIcon","tempScale","setTempScale","setDay","setTempMins","setTempMaxes","toggleActive","setToggleActive","convertTemp","temp","dec","cell","getFahrenheit","useEffect","getCurrentWeather","e","a","fetch","api_call","json","response","cod","console","log","name","main","temp_min","temp_max","weather","getdate","splitDays","findMin","findMax","days","day_max","i","length","hours","map","hour","max","push","day_min","min","array","size","index","slice","fiveDay","day1","Date","getDay","k","forecast","list","desList","item","getforecast","min_divs","max_divs","backgroundUrl","toLowerCase","onClick","on","off","offstyle","onstyle","active","role","background","process","Form","onSubmit","preventDefault","Control","onChange","value","type","placeholder","Button","variant","ReactDOM","render","basename","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.7922fe37.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Weather = props => {\n    const { currentTemp, tempMin, tempMax, description, city } = props\n\n    return (\n        <div className=\"container body\" style={{\n            textShadow: '2px 2px rgba(150, 150, 150)'\n        }}>\n            <div className=\"cards\"></div>\n            <div className=\"cityHeader\"> {city} </div>\n            <h2 className=\"py-4\">\n                <div className=\"icons\"><i className={`wi ${props.icon}`} /></div>\n            </h2>\n            <h2 className=\"py-2\"> Current {currentTemp} </h2>\n            <div>\n                <h2 className=\" d-flex justify-content-around\">\n                    <div> min{tempMin}</div>\n                    <div>max{tempMax}</div>\n                </h2>\n            </div>\n\n            {/* Weather description */}\n            <h3 className=\"py-3\">\n                {description}\n            </h3>\n            <div className=\"d-flex justify-content-end\">\n            </div>\n        </div >\n\n    );\n\n}\nexport default Weather;\n\n","\nimport React from 'react'\nimport { Card } from 'semantic-ui-react'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { icon1 } from '../App'\n\nconst ForecastCard = (props) => (\n\n    <Container fluid={true}>\n        <Row className='projectsBox'>\n            <Col className=\"forecastcards\">\n                <Card>\n                    <Card.Content>\n                        <Card.Header> {props.day[0]} <i className={`wi ${icon1[props.description[0]]}`} />   </Card.Header>\n                        <Card.Meta textAlign=\"center\" className=\"flex-container\" >\n                            <div className='py-1' > {props.tempMin[0]} </div >\n                            <div className='py-1'> {props.tempMax[0]} </div >\n                        </Card.Meta>\n                        <Card.Description>\n                            {props.description[0]}\n                        </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n                    </Card.Content>\n                </Card>\n            </Col>\n            <Col className=\"forecastcards\">\n                <Card >\n                    <Card.Content>\n                        <Card.Header> {props.day[1]}<i className={`wi ${icon1[props.description[1]]}`} />  </Card.Header>\n                        <Card.Meta textAlign=\"center\" className=\"flex-container\" >\n                            <div className='py-1' > {props.tempMin[1]} </div>\n                            <div className='py-1'> {props.tempMax[1]} </div>\n                        </Card.Meta>\n                        <Card.Description>\n                            {props.description[1]}\n                        </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n                    </Card.Content>\n                </Card>\n            </Col>\n            <Col className=\"forecastcards\">\n                <Card >\n                    <Card.Content>\n                        <Card.Header>{props.day[2]} <i className={`wi ${icon1[props.description[2]]}`} /> </Card.Header>\n                        <Card.Meta textAlign=\"center\" className=\"flex-container\" >\n                            <div className='py-1' > {props.tempMin[2]} </div>\n                            <div className='py-1'> {props.tempMax[2]} </div>\n                        </Card.Meta>\n                        <Card.Description>\n                            {props.description[2]}\n                        </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n                    </Card.Content>\n                </Card>\n            </Col>\n            <Col className=\"forecastcards\">\n                <Card >\n                    <Card.Content>\n                        <Card.Header> {props.day[3]}  <i className={`wi ${icon1[props.description[3]]}`} /></Card.Header>\n                        <Card.Meta textAlign=\"center\" className=\"flex-container\" >\n                            <div className='py-1' > {props.tempMin[3]} </div>\n                            <div className='py-1'> {props.tempMax[3]} </div>\n                        </Card.Meta>\n                        <Card.Description>\n                            {props.description[3]}\n                        </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n                    </Card.Content>\n                </Card>\n            </Col>\n\n            <Col className=\"forecastcards\">\n                <Card >\n                    <Card.Content>\n                        <Card.Header>{props.day[4]} <i className={`wi ${icon1[props.description[4]]}`} /> </Card.Header>\n                        <Card.Meta textAlign=\"center\" className=\"flex-container\" >\n                            <div className='py-1' > {props.tempMin[4]} </div>\n                            <div className='py-1'> {props.tempMax[4]} </div>\n                        </Card.Meta>\n                        <Card.Description>\n                            {props.description[4]}\n                        </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n\n                    </Card.Content>\n                </Card>\n            </Col>\n        </Row >\n    </Container >\n)\n\nexport default ForecastCard","import React from 'react'\nimport { Container } from 'react-bootstrap';\nimport ForecastCard from './ForecastCard';\n\nexport default function Forecast(props) {\n    const { tempMins, tempMaxes, day, descriptions } = props\n    return (\n        <section className=\"forecast\">\n            <Container>\n                <marquee behavior=\"slide\" direction=\"right\">\n                    <div className=\"forecastTitle\">5 Day Forecast</div>\n                </marquee>\n            </Container>\n            <Container className=\"forecast\">\n                <div className=\"d-flex flex-row d-flex justify-content-around\">\n                    <ForecastCard tempMin={tempMins} tempMax={tempMaxes} day={day} description={descriptions} />\n                </div>\n            </Container >\n        </section>\n    )\n}\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nexport default function Footer() {\n    return (\n        <Container>\n            <section className=\"pageFooter\">\n                <section className='contacts' id=\"contacts\">\n                    <div className='connect'>Interested in collaborating? Let's connect! </div>\n                    <h4 className=\"align-left p-2\">\n                        <section className='contactsList'>\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto: kkwsin@gmail.com\">\n                                <i className=\"fas fa-2x fa-envelope\"></i>\n                            </a>\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://www.linkedin.com/in/karensin94/'>\n                                <i className=\"fab fa-2x fa-linkedin\"></i>\n                            </a>\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://github.com/karensin'>\n                                <i className=\"fab fa-2x fa-github\"></i>\n                            </a>\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://angel.co/karen-kaweng-sin'>\n                                <i className=\"fa fa-2x fa-angellist\"></i>\n                            </a>\n                        </section>\n                    </h4>\n                </section>\n                <h4 className=\"copyright\">Karen Sin 2020</h4>\n                <footer>\n\n                </footer>\n            </section>\n\n        </Container>\n\n    )\n}\n","import Weather from './component/weather'\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nimport { Container, Button, Form, Col } from 'react-bootstrap';\nimport Forecast from './component/Forecast';\nimport Toggle from 'react-bootstrap-toggle';\nimport Footer from './component/Footer';\n\n\n//api.openweathermap.org/data/2.5/weather?q=London,uk\nconst API_Key = \"d06db66101a950f6afc113f4474df923\";\n\nlet location = {\n    city: 'San Francisco',\n}\n\nexport const icon1 = {\n    Thunderstorm: \"wi-thunderstorm\",\n    Drizzle: \"wi-sleet\",\n    Rain: \"wi-storm-showers\",\n    Snow: \"wi-snow\",\n    Atmosphere: \"wi-fog\",\n    Clear: \"wi-day-sunny\",\n    Clouds: \"wi-day-fog\"\n};\n\nconst Scales = {\n    KELVIN: 'kelvin',\n    CELSIUS: 'celsius',\n    FAHRENHEIT: 'fahrenheit'\n}\n\nexport function getFahrenheit(newTemp) {\n    const cell = calCelsius(newTemp)\n    return Math.floor(cell * (9 / 5) + 32);\n}\n\nexport function calCelsius(newTemp) {\n    let cell = Math.floor(newTemp - 273.15);\n    return cell;\n}\n\nconst daysString = {\n    0: 'Sun',\n    1: 'Mon',\n    2: 'Tues',\n    3: 'Wed',\n    4: 'Thurs',\n    5: 'Fri',\n    6: 'Sat',\n}\n\nfunction App() {\n    const [currentTemp, setCurrentTemp] = useState()\n    const [city, setCity] = useState(location.city);\n    const [tempCity, setTempCity] = useState(location.city);\n    const [tempMin, setTempMin] = useState(0);\n    const [tempMax, setTempMax] = useState(0);\n    const [description, setDescription] = useState()\n    const [descriptions, setDescriptions] = useState([])\n    const [weatherMain, setWeatherMain] = useState('')\n    const [input, setInput] = useState('')\n    const [icon, setIcon] = useState('')\n    const [tempScale, setTempScale] = useState(Scales.FAHRENHEIT)\n\n    const [day, setDay] = useState([])\n    const [tempMins, setTempMins] = useState([]);\n    const [tempMaxes, setTempMaxes] = useState([]);\n    const [toggleActive, setToggleActive] = useState(true);\n\n    function convertTemp(temp) {\n        let dec = ''\n        let newTemp\n\n        if (tempScale === Scales.CELSIUS) {\n            newTemp = calCelsius(temp)\n            dec = 'C'\n        }\n        if (tempScale === Scales.FAHRENHEIT) {\n            newTemp = getFahrenheit(temp)\n            dec = 'F'\n        }\n        if (tempScale === Scales.KELVIN) {\n            newTemp = temp\n        }\n        return (\n            <div>\n                {newTemp} {dec} &deg;\n            </div>\n        );\n    }\n\n    function onToggle() {\n        let newState = !toggleActive\n        let newTempScale = newState ? Scales.FAHRENHEIT : Scales.CELSIUS;\n        setTempScale(newTempScale)\n        setToggleActive(!toggleActive)\n    }\n\n    function onChangeSearchCity(e) {\n        setInput(e.target.value)\n    }\n    function onSubmitSearchCity(e, name) {\n        setTempCity(input)\n        e.preventDefault()\n        return false\n    }\n\n    useEffect(() => {\n        const getCurrentWeather = async (e) => {\n            const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${tempCity}&appid=${API_Key}`);\n            //5 day forecast is available at any location or city. It includes weather data every 3 hours.\n\n            const response = await api_call.json();\n\n            if (response.cod !== 200) {\n                return\n            }\n            console.log(response)\n            setCity(response.name)\n            setTempMin(response.main.temp_min)\n            setTempMax(response.main.temp_max)\n            setDescription(response.weather[0].description)\n            setWeatherMain(response.weather[0].main)\n            setCurrentTemp(response.main.temp)\n            setIcon(response.weather[0].main)\n        }\n\n        const getforecast = async (e) => {\n            //5 day forecast is available at any location or city. It includes weather data every 3 hours.\n            const api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${tempCity}&appid=${API_Key}`);\n            //\n            const response = await api_call.json();\n            console.log(response)\n\n            if (response.cod !== \"200\") {\n                return\n            }\n\n            function getdate() {\n                let fiveDay = []\n                let getToday = new Date()\n                let day1 = getToday.getDay()\n                for (let i = day1; i < day1 + 5; i++) {\n                    let k = i\n                    if (k >= 7) {\n                        k = k - 7\n                    }\n                    fiveDay.push(daysString[k])\n                }\n                console.log(fiveDay, 'getdate')\n                return fiveDay\n\n            }\n\n            const forecast = getdate()\n\n            setDay([...forecast])\n            console.log(day)\n            function splitDays(array, size) {\n                let days = []\n                let index = 0;\n                while (index < array.length) {\n                    days.push(array.slice(index, size + index));\n                    index += size;\n                }\n                return days;\n            }\n\n            let days = splitDays(response.list, 8)\n\n            function findMin(days) {\n                let day_min = []\n                for (let i = 0; i < days.length; i++) {\n                    let day = days[i]\n                    let hours = day.map(hour => hour.main.temp_min)\n\n                    let min = Math.min(...hours)\n                    day_min.push({ min: min });\n                }\n                return day_min;\n            }\n\n            function findMax(days) {\n                let day_max = [];\n                for (let i = 0; i < days.length; i++) {\n                    let day = days[i]\n                    let hours = day.map(hour => hour.main.temp_max)\n\n                    let max = Math.max(...hours)\n                    day_max.push({ max: max });\n                }\n                return day_max;\n            }\n\n            const desList = [days[0][0].weather[0].main, days[1][0].weather[0].main, days[2][0].weather[0].main, days[3][0].weather[0].main, days[4][0].weather[0].main]\n            const min = findMin(days).map(item => item.min)\n            const max = findMax(days).map(item => item.max)\n\n            setTempMins([...min])\n            setTempMaxes([...max])\n            setDescriptions([...desList])\n        }\n        getforecast();\n        getCurrentWeather();\n    }, [tempCity]);\n\n    const min_divs = tempMins.map(item => <div>{convertTemp(item)}</div>)\n    const max_divs = tempMaxes.map(item => <div> {convertTemp(item)} </div>)\n\n    let backgroundUrl = '/img/blue-and-white-milky-way.jpg';\n    switch (weatherMain.toLowerCase()) {\n        case 'drizzle':\n        case 'rain':\n            backgroundUrl = '/img/rain_background.jpg';\n            break;\n        case 'clouds':\n            backgroundUrl = '/img/cloudy2.jpg';\n            break;\n        case 'clear':\n        case 'sunny':\n            backgroundUrl = '/img/sunny_background.jpg';\n            break;\n        case 'snow':\n            backgroundUrl = '/img/snow.jpg';\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <div className=\"App \" >\n            <div className=\"d-flex justify-content-end \">\n                <Toggle className=\"d-flex justify-content-end\"\n                    onClick={onToggle}\n                    on={<div className=\"buttonTextF\"> F °</div>}\n                    off={<div className=\"buttonTextC\">C °</div>}\n                    size=\"lg\"\n                    offstyle=\"default\"\n                    onstyle=\"default\"\n                    active={toggleActive}\n                />\n            </div>\n            <header className=\"App-header background\" role=\"main\" style={{\n                background: `url(\"${process.env.PUBLIC_URL + backgroundUrl}\") no-repeat center / cover `\n            }}  >\n                <Container>\n                    <Form onSubmit={onSubmitSearchCity}  >\n                        <Form.Row className=\"px-4 d-flexcenter\">\n                            <Col className=\"pd-25\">\n                                <Form.Control onChange={onChangeSearchCity} name=\"city\" type=\"text\" placeholder=\"City\">\n                                </Form.Control >\n                            </Col>\n                            <Button variant=\"light\" size=\"md\" type=\"submit\">\n                                Search\n                            </Button>\n                        </Form.Row>\n                    </Form>\n                    <Weather icon={icon1[icon]} tempMin={convertTemp(tempMin)} tempMax={convertTemp(tempMax)} city={city}\n                        description={description} currentTemp={convertTemp(currentTemp)}\n                    />\n                </Container>\n            </header>\n\n            <Forecast tempCity={tempCity} tempMins={min_divs} tempMaxes={max_divs} day={day} descriptions={descriptions} />\n            <Footer />\n        </div >\n\n    );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter basename=\"/WeatherForecast\">\n        <Switch>\n            <Route exact path=\"/\" component={App} />\n        </Switch>\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}